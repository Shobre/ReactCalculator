{"version":3,"sources":["logo.svg","components/buttons.jsx","components/display.jsx","components/button.jsx","components/calculator.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Buttons","react_default","a","createElement","className","this","props","children","Component","Display","string","data","join","Button","onClick","data-size","size","data-value","value","label","Calculator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","target","getAttribute","setState","operations","calculateOperations","newOperations","update","state","$push","result","math","eval","format","precision","String","addButtons","blabel","bvalue","buttons","i","length","push","components_button","key","src","logo","alt","display","components_buttons","App","calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3a4c051.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\nclass Buttons extends Component {\n    render() {\n        return <div className=\"Buttons\"> {this.props.children} </div>\n    }\n}\n\nexport default Buttons","import React, { Component } from \"react\";\n\nclass Display extends Component {\n    render() {\n        const string = this.props.data.join('')\n        return <div className=\"Display\"> {string} </div>\n    }\n}\n\nexport default Display","import React, { Component } from \"react\";\n\nclass Button extends Component {\n    render() {\n        return (\n            <div\n                onClick={this.props.onClick}\n                className=\"Button\"\n                data-size={this.props.size}\n                data-value={this.props.value}\n            >\n                {this.props.label}\n            </div>\n        )\n    }\n}\n\nexport default Button","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport Buttons from './buttons'\nimport Display from './display'\nimport Button from './button'\nimport update from 'immutability-helper'\nimport math from 'mathjs'\n\nclass Calculator extends Component {\n    constructor() {\n        super()\n        this.state = { operations: [] };\n    }\n\n    handleClick = e => {\n        const value = e.target.getAttribute('data-value')\n        switch (value) {\n            case 'clear':\n                this.setState({\n                    operations: [],\n                })\n                break\n            case 'equal':\n                this.calculateOperations()\n                break\n            default:\n                const newOperations = update(this.state.operations, {\n                    $push: [value],\n                })\n                this.setState({\n                    operations: newOperations,\n                })\n                break\n        }\n    }\n\n    calculateOperations = () => {\n        let result = this.state.operations.join('')\n        if (result) {\n            result = math.eval(result)\n            result = math.format(result, { precision: 14 })\n            result = String(result)\n            this.setState({\n                operations: [result],\n            })\n        }\n    }\n\n    addButtons = () => {\n        let blabel = [\"C\", \"7\", \"4\", \"1\", \".\", \"/\", \"8\", \"5\", \"2\", \"0\", \"X\", \"9\", \"6\", \"3\", \"\", \"-\"]\n        let bvalue = [\"clear\", \"7\", \"4\", \"1\", \".\", \"/\", \"8\", \"5\", \"2\", \"0\", \"*\", \"9\", \"6\", \"3\", \"null\", \"-\"]\n        let buttons = []\n        for(let i = 0; i < blabel.length; i++){\n            buttons.push( <Button onClick={this.handleClick} key={i} label={blabel[i]} value={bvalue[i]} />)\n        }\n        return buttons\n    }\n\n    render() {\n        return <div className=\"Calculator\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Display data={this.state.operations} />\n            <Buttons>\n              {this.addButtons()}\n\n              <Button onClick={this.handleClick} label=\"+\" size=\"2\" value=\"+\" />\n              <Button onClick={this.handleClick} label=\"=\" size=\"2\" value=\"equal\" />\n            </Buttons>\n          </div>;\n    }\n}\n\nexport default Calculator","import React, { Component } from 'react';\nimport './App.css';\nimport Calculator from './components/calculator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Calculator/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}